#!/usr/bin/python

import unittest
import PatternCount


class PatternCountTest(unittest.TestCase):

    def testEmptyText(self):
        self.assertEqual(0, PatternCount.PatternCount('', 'foo'))

    def testData1(self):
        text = 'CGATATATCCATAG'
        self.assertEqual(3, PatternCount.PatternCount(text, 'ATA'))

    def testData2(self):
        text = 'ACAACTATGCATACTATCGGGAACTATCCT'
        self.assertEqual(3, PatternCount.PatternCount(text, 'ACTAT'))

    def testData3(self):
        text = 'TCATTGTGTCATTGTTTCATTGTTCATTGTCCGGCATTCATTGTCCCTCATTGTCTTTCATTGTGAGTACTGTACAAAGTCATTGTCCTATTCTGTCATTGTTGTCATTGTTGTCATTGTTCATTGTCCTGAGCGTCATTGTCGCCCCTTCATTGTCTCATTGTTCATTGTAGATATACATCATTGTTCATTGTTCATTGTAGTCATTGTAGTCATTGTTCATTGTAAAACATCCGTTCATTGTTCATTGTATCATTGTTCATTGTTAAGTCATTGTAATTTCATTGTGTCATTGTATTCATTGTCATTAGCAGCTCATTGTTCTCATTGTCTCATTGTCTGCTCATTGTTAACAAAGCTCATTGTGTTCATTGTTAGTCATTGTTTCATTGTCTCATTGTCTCATTGTTCATTGTAGATCGCCTCATTGTTCATTGTAATCATTGTTCATTGTAGTCATTGTTCATTGTTGTCATTGTGGCACTCATTGTTCATTGTTCATTGTTCATTGTAAGTCATTGTCTTCATTGTTCATTGTTTCATTGTTCGGTCATTGTTTTCATTGTAGGGTTTAGCTCATTGTTCATTGTATTCATTGTCAGGTCATTGTACATCATTGTCTCATTGTTGCAGATTCATTGTCTTCATTGTTCATTGTTCATTGTTCATTGTTCATTGTTCTCATTGTTTCATTGTTATTCATTGTTGATTCATTGTTCATTGTGGTCATTGTGGTGTGCGTCATTGTGAGACATCATTGTTCATTGTTCATTGTTCATTGTTCATTGTGGTTTCTCATTGTGAGCTCATTGTCTCATTGTTCATTGTCTCATTGTATAATTCAAATCATTGTTCATTGTAATGGGGGAGTTCATTGTATTCATTGTTGTCATTGTTCGGTCATTGTGTGAGTTTGTCATTGTTCATTGT'
        self.assertEqual(33, PatternCount.PatternCount(text, 'TCATTGTTC'))

    def testData4(self):
        text = 'CAACGCATCAACGCAGCAACGCATCAACGCATAGCCCGGGCAACGCACAACGCAAGACAACGCACAACGCACGCAACGCAGGTCAACGCAGCAACGCAGCAACGCATTCAACGCACAACGCATTCTCAACGCAGTGCAACGCATCCAACGCATTCAACGCACTTCAACGCACCATTTCCAACGCATCGACCTCCAACGCACAACGCATCCCAACAACGCAAGCAACGCACCCAACGCACAACGCAGACAACGCAGCTGCAACGCATCGACGTCGGCAACGCAAGGCGCAACGCACAACGCAAACAACGCACAACGCATCACAACGCACAACGCACATCACCAACGCACACCAACGCAATACAACGCAACTGTATACAAATCACAACGCAGTCAACGCACAACGCATTTCAACGCACAACGCAACAACGCATTGACAACGCAACAAATCAACGCACGTGCAACGCACACAACGCACCCAACGCAGCAACGCACGGGTCCGGTAACAACGCATGTCAACGCAACCAACGCAAAGCAACGCACAACGCAGATCCAACGCACAACGCACGAGTTCCAGCGACAACGCAAACAACGCATCTAACTTCAGAAGCAACGCACCAACGCATACAACGCATTTGCAACGCAGTCACAACGCACAACGCAACAACGCAGTCAACGCATCGTATCACAACGCACAACGCAGCAACGCAGACAACGCATATTGACAACGCACACAACGCAAATCGCAACGCAAACTACAACGCATCGTAACAACGCACACTTCAACGCACATGGCCCTTGAGCAACGCATTCCAACGCACCAACGCACAACGCAACAACGCAAAGACGCGCAACGCAGCAACGCACCAACGCAAGCACAACGCATCAACGCACAACGCACAACGCAGTCCAACGCAAGTACAACGCACGCAACGCA'
        self.assertEqual(23, PatternCount.PatternCount(text, 'CAACGCACA'))


class FrequentWordsTest(unittest.TestCase):

    def testData1(self):
        text = 'ACGTTGCATGTCGCATGATGCATGAGAGCT'
        expect = set(['CATG', 'GCAT'])
        self.assertEqual(expect, PatternCount.FrequentWords(text, 4))

    def testData2(self):
        text = 'CGGAAGCGAGATTCGCGTGGCGTGATTCCGGCGGGCGTGGAGAAGCGAGATTCATTCAAGCCGGGAGGCGTGGCGTGGCGTGGCGTGCGGATTCAAGCCGGCGGGCGTGATTCGAGCGGCGGATTCGAGATTCCGGGCGTGCGGGCGTGAAGCGCGTGGAGGAGGCGTGGCGTGCGGGAGGAGAAGCGAGAAGCCGGATTCAAGCAAGCATTCCGGCGGGAGATTCGCGTGGAGGCGTGGAGGCGTGGAGGCGTGCGGCGGGAGATTCAAGCCGGATTCGCGTGGAGAAGCGAGAAGCGCGTGCGGAAGCGAGGAGGAGAAGCATTCGCGTGATTCCGGGAGATTCAAGCATTCGCGTGCGGCGGGAGATTCAAGCGAGGAGGCGTGAAGCAAGCAAGCAAGCGCGTGGCGTGCGGCGGGAGAAGCAAGCGCGTGATTCGAGCGGGCGTGCGGAAGCGAGCGG'
        expect = set(['CGGCGGGAGATT', 'CGGGAGATTCAA', 'CGTGCGGCGGGA',
                      'CGTGGAGGCGTG', 'CGTGGCGTGCGG', 'GCGTGCGGCGGG',
                      'GCGTGGAGGCGT', 'GCGTGGCGTGCG', 'GGAGAAGCGAGA',
                      'GGAGATTCAAGC', 'GGCGGGAGATTC', 'GGGAGATTCAAG',
                      'GTGCGGCGGGAG', 'TGCGGCGGGAGA'])
        self.assertEqual(expect, PatternCount.FrequentWords(text, 12))

    def testData3(self):
        text = 'GACAACCACAGACGAAATGATGACAGACGAAATGATGACAATTGTTTCAATTGTTTCAGACGAAGACAACCACAGACGAAGACAACCAATGATGATGGCGTGCAGACGAATGGCGTGTGGCGTGCAATTGTTTCAGACGAAATGATGATGGCGTGTGGCGTGGACAACCAATGATGACAATTGTTTTGGCGTGCAGACGAATGGCGTGCAGACGAATGGCGTGCAGACGAACAGACGAAATGATGAATGATGACAATTGTTTATGATGAATGATGACAGACGAAATGATGAATGATGACAGACGAACAATTGTTTCAATTGTTTCAATTGTTTCAATTGTTTGACAACCATGGCGTGTGGCGTGGACAACCATGGCGTGATGATGAGACAACCATGGCGTGCAATTGTTTCAATTGTTTCAATTGTTTTGGCGTGCAATTGTTTGACAACCATGGCGTGCAGACGAACAATTGTTTTGGCGTGTGGCGTGCAGACGAATGGCGTGGACAACCACAATTGTTTATGATGACAATTGTTTCAATTGTTTCAGACGAAATGATGAGACAACCACAGACGAAGACAACCACAGACGAAGACAACCACAATTGTTTCAGACGAACAGACGAACAATTGTTTCAGACGAACAATTGTTTATGATGAATGATGAGACAACCACAGACGAAATGATGACAATTGTTTCAGACGAAGACAACCACAATTGTTTTGGCGTGCAGACGAACAATTGTTTTGGCGTGATGATGAGACAACCATGGCGTGATGATGATGGCGTGGACAACCACAATTGTTTTGGCGTGATGATGAGACAACCAATGATGATGGCGTGCAGACGAACAGACGAAATGATGACAATTGTTT'
        expect = set(['TGGCGTGCAGACGA', 'AGACGAAATGATGA', 'GGCGTGCAGACGAA', 'CAGACGAAATGATG'])
        self.assertEqual(expect, PatternCount.FrequentWords(text, 14))


if __name__ == '__main__':
    unittest.main()
